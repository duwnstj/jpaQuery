plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group 'me.whitebear'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // PostgreSQL 의존성 추가
    implementation 'org.postgresql:postgresql:42.2.27'

    // 4. SpringBoot 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // JUNIT 테스트를 위한 기본 의존성
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // 5. JDBC Template 등.. Spring 의존성을 받기위한 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 6. MyBatis 실습을 위한 의존성
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
    testCompileClasspath 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.1'
    runtimeOnly 'org.postgresql:postgresql'

    // 7. 개발편의를 위한 Lombok 의존성 추가
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 8. RawJPA 적용을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // 9. QueryDSL 적용을 위한 의존성 (SpringBoot3.0 부터는 jakarta 사용해야함)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // H2는 자바 기반의 인메모리 데이터베이스로,
    // 로컬 개발 및 테스트 환경에서 DB 서버를 별도로 구축하지 않고 사용할 수 있게 해 줍니다.
    // 빠르고 경량이며 설정이 간단하다는 장점이 있습니다.
    runtimeOnly 'com.h2database:h2'

    // 10. FixtureMonkey 적용을 위한 의존성
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.19'
}

test {
    useJUnitPlatform()
}